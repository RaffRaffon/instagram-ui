[{"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\index.js":"1","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\reportWebVitals.js":"2","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\App.js":"3","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\user-context.js":"4","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Header\\Header.js":"5","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Login\\Login.js":"6","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\services\\user.service.js":"7","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Register\\Register.js":"8","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostCreate\\PostCreate.js":"9","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Feed\\Feed.js":"10","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Search\\Search.js":"11","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\Profile.js":"12","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostPage\\PostPage.js":"13","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Login\\login.schema.js":"14","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Register\\register.schema.js":"15","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostCreate\\post-create.schema.js":"16","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\services\\post.service.js":"17","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Header\\HeaderAvatar\\HeaderAvatar.js":"18","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Header\\Menu\\Menu.js":"19","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\environments\\index.js":"20","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Search\\SearchResult\\SearchResult.js":"21","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\ProfileHeader\\ProfileHeader.js":"22","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Avatar\\Avatar.js":"23","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Post\\Post.js":"24","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Post\\PostDate\\PostDate.js":"25","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\environments\\development.js":"26","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Login\\LoginBasic.js":"27","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Post\\PostLike\\PostLike.js":"28","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\ProfileEdit\\ProfileEdit.js":"29","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\Comments.js":"30","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\CommentAdd\\CommentAdd.js":"31","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\Comment\\Comment.js":"32","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\ProfileEdit\\profileedit.schema.js":"33","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\CommentDate\\CommentDate.js":"34","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Logout\\Logout.js":"35","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\environments\\production.js":"36","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Explore\\Explore.js":"37","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostEdit\\PostEdit.js":"38"},{"size":680,"mtime":1615581619822,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1614806053308,"results":"41","hashOfConfig":"40"},{"size":3737,"mtime":1617057033488,"results":"42","hashOfConfig":"40"},{"size":102,"mtime":1617046817854,"results":"43","hashOfConfig":"40"},{"size":531,"mtime":1616190279517,"results":"44","hashOfConfig":"40"},{"size":2758,"mtime":1617046810810,"results":"45","hashOfConfig":"40"},{"size":5070,"mtime":1617032459989,"results":"46","hashOfConfig":"40"},{"size":4962,"mtime":1617052567689,"results":"47","hashOfConfig":"40"},{"size":3127,"mtime":1617113110974,"results":"48","hashOfConfig":"40"},{"size":1150,"mtime":1617114979388,"results":"49","hashOfConfig":"40"},{"size":1120,"mtime":1617123949835,"results":"50","hashOfConfig":"40"},{"size":4151,"mtime":1617114848496,"results":"51","hashOfConfig":"40"},{"size":1664,"mtime":1615827523565,"results":"52","hashOfConfig":"40"},{"size":162,"mtime":1614806053298,"results":"53","hashOfConfig":"40"},{"size":1438,"mtime":1616937970741,"results":"54","hashOfConfig":"40"},{"size":216,"mtime":1614806053300,"results":"55","hashOfConfig":"40"},{"size":3782,"mtime":1616778374201,"results":"56","hashOfConfig":"40"},{"size":945,"mtime":1617046457425,"results":"57","hashOfConfig":"40"},{"size":1071,"mtime":1616778925101,"results":"58","hashOfConfig":"40"},{"size":233,"mtime":1616433633612,"results":"59","hashOfConfig":"40"},{"size":616,"mtime":1615494009731,"results":"60","hashOfConfig":"40"},{"size":1035,"mtime":1616522308021,"results":"61","hashOfConfig":"40"},{"size":558,"mtime":1616440361222,"results":"62","hashOfConfig":"40"},{"size":1332,"mtime":1616779129486,"results":"63","hashOfConfig":"40"},{"size":386,"mtime":1615579754881,"results":"64","hashOfConfig":"40"},{"size":70,"mtime":1616433378956,"results":"65","hashOfConfig":"40"},{"size":690,"mtime":1615140617819,"results":"66","hashOfConfig":"40"},{"size":2352,"mtime":1617122212252,"results":"67","hashOfConfig":"40"},{"size":8043,"mtime":1617046155303,"results":"68","hashOfConfig":"40"},{"size":967,"mtime":1616278757441,"results":"69","hashOfConfig":"40"},{"size":721,"mtime":1616278223750,"results":"70","hashOfConfig":"40"},{"size":1399,"mtime":1616768725739,"results":"71","hashOfConfig":"40"},{"size":2195,"mtime":1616940884382,"results":"72","hashOfConfig":"40"},{"size":392,"mtime":1616275140671,"results":"73","hashOfConfig":"40"},{"size":482,"mtime":1617051502272,"results":"74","hashOfConfig":"40"},{"size":88,"mtime":1616433374283,"results":"75","hashOfConfig":"40"},{"size":798,"mtime":1616779558271,"results":"76","hashOfConfig":"40"},{"size":2215,"mtime":1617059271030,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1214xhg",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"80"},"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\index.js",[],["169","170"],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\reportWebVitals.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\App.js",["171","172"],"\r\nimport './App.scss';\r\nimport { useEffect, useState,useContext} from 'react';\r\nimport Header from './Header/Header';\r\nimport Register from './Register/Register';\r\nimport { Switch, Route, useHistory } from 'react-router-dom';\r\nimport Login from './Login/Login';\r\n// import LoginBasic from './Login/LoginBasic';\r\nimport Feed from './Feed/Feed';\r\nimport { UserService } from './services/user.service';\r\nimport { UserContext } from './user-context';\r\nimport PostCreate from './PostCreate/PostCreate';\r\nimport PostPage from './PostPage/PostPage';\r\nimport Profile from './Profile/Profile';\r\nimport Search from './Search/Search';\r\nimport ProfileEdit from './Profile/ProfileEdit/ProfileEdit';\r\nimport Logout from './Logout/Logout';\r\nimport Explore from './Explore/Explore';\r\nimport PostEdit from './PostEdit/PostEdit';\r\nfunction App() {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({});\r\n    const { userObject } = useContext(UserContext);\r\n    useEffect(() => {\r\n        async function getMe() {\r\n            console.log(\"this is working first\",\"user is:\",userObject)\r\n            try {\r\n                const user = await UserService.me();\r\n                if (!user) {\r\n                    history.push('/login');\r\n                    return;\r\n                }\r\n                setUser(user.username);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        \r\n        isLoggedIn()\r\n        getMe();\r\n    }, [history,user]);\r\n    // const [test,setTest] = useState(false)\r\n    // useEffect(() => {\r\n    //     console.log(test)\r\n    //     isLoggedIn()\r\n    // },[test])\r\n    function isLoggedIn() {\r\n        console.log(\"its working\",user)\r\n        return Boolean(Object.keys(user).length);\r\n    }\r\n    function test(){\r\n        console.log(Boolean(Object.keys(user).length))\r\n    }\r\n    // מה זה  return Boolean(Object.keys(user).length);\r\n\r\n  return ( // למה הסדר של הראוטים משנה\r\n      <UserContext.Provider value={{userObject, setUser}}>\r\n        <div className=\"App d-flex flex-column flex-sm-column-reverse vh-100\">\r\n            <div className=\"flex-grow-1 main\">\r\n              <div className=\"container mt-lg-4\">\r\n                <Switch>\r\n                    <Route path=\"/register\">\r\n                        <Register />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login/>\r\n                    </Route>\r\n                    <Route path=\"/post/create\">\r\n                        <PostCreate />\r\n                    </Route>\r\n                    <Route path=\"/post/:id\">\r\n                        <PostPage />\r\n                    </Route>\r\n                    <Route path=\"/profile/:username/edit\">\r\n                        <ProfileEdit />\r\n                    </Route>\r\n                    <Route path=\"/profile/:username\">\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route path=\"/search\">\r\n                        <Search />\r\n                    </Route>\r\n                    <Route path=\"/logout\">\r\n                        <Logout  check={isLoggedIn} setUser={setUser}/>\r\n                    </Route>\r\n                    <Route path=\"/explore\" >\r\n                        <Explore/>\r\n                    </Route>\r\n                    <Route path=\"/postedit/:postId\" >\r\n                        <PostEdit/>\r\n                    </Route>\r\n                    <Route path=\"/\" exact>\r\n                        <Feed />\r\n                    </Route>\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n            { isLoggedIn() && <Header /> }\r\n        </div>\r\n      </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\user-context.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Header\\Header.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Login\\Login.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\services\\user.service.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Register\\Register.js",["173","174","175"],"import React, { useState,useEffect } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Register.scss';\r\nimport avatarDefault from '../common/Avatar/avatar.jpg';\r\nimport { registerSchema } from './register.schema';\r\nimport { UserService } from '../services/user.service';\r\n\r\nfunction Register() {\r\n\tconst history = useHistory();\r\n\tconst [showSuccess, setSuccess] = useState(false);\r\n\tconst [showImage,setShowImage]=useState(null)\r\n\tconst [disabled,setDisabled]=useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tlet avatar=\"\"\r\n\t\tif (avatarDefault.includes(\"jpeg\")) {\r\n\t\t\tavatar=avatarDefault.replace(\"data:image/jpeg;base64,\",\"\");\r\n\t\t\tsetShowImage(avatar)}\r\n\t},[])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t},[])\r\n\t\r\n\tfunction submit(values) {\r\n\t\tconsole.log(\"working\")\r\n\t\tsetDisabled(true)\r\n\t\tvalues.avatar=showImage\r\n\t\tUserService.create(values)\r\n\t\t\t.then(res => {\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\tsetSuccess(true);\r\n\t\t\t\t\tsetTimeout(() => history.push('/login'), 2000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status === 413){\r\n\t\t\t\t\talert(\"file too big, crop it or change it\")\r\n\t\t\t\t\tsetDisabled(false)\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log('failure!!!');\r\n\t\t\t});\r\n\t\t\t\r\n\t}\r\n\tfunction encodeImageFileAsURL(element) {\r\n\t\treturn new Promise((res, rej) => { \r\n\t\t\tvar file = element.target.files[0];\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tconsole.log(reader)\r\n\t\t\t\tres(reader.result)\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(file);\r\n\r\n\t\t})\r\n\t  }\r\n\r\n\treturn (\r\n\t\t<div className=\"Register d-flex justify-content-center\">\r\n\t\t\t<div className=\"col col-lg-4 my-5\">\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<h2 className=\"Register__title\">Register</h2>\r\n\t\t\t\t\t<h3 className=\"Register__subtitle\">It's quick and easy</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{username: '', password: '', email: '', agreeToTerms: false,avatar: ''}}\r\n\t\t\t\t\tvalidationSchema={registerSchema}\r\n\t\t\t\t\tvalidateOnChange={true}\r\n\t\t\t\t\tonSubmit={submit}>\r\n\t\t\t\t\t{({ disabled,setFieldValue,isSubmitting }) => (\r\n\t\t\t\t\t\t<Form className=\"Register__form mt-5 px-0\" noValidate>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t\t\t\t\t\t<Field type=\"username\" className=\"form-control\" id=\"username\" name=\"username\" placeholder=\"2-16 characters\" />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"username\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t\t<Field type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email address...\" />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"email\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t\t\t<Field type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"6-16 characters\" />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"password\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">Avatar\r\n\t\t\t\t\t\t\t\t<input type=\"file\"\r\n\t\t\t\t\t\t\t\t       id=\"avatar\"\r\n\t\t\t\t\t\t\t\t       name=\"avatar\"\r\n\t\t\t\t\t\t\t\t       className=\"form-control\"\r\n\t\t\t\t\t\t\t\t       onChange={async (e) =>{ setFieldValue('image', e.target.files[0])\r\n\t\t\t\t\t\t\t\t\t   let imageString=await encodeImageFileAsURL(e)\r\n\t\t\t\t\t\t\t\t\t   if (imageString.includes(\"png\")) {imageString = \r\n\t\t\t\t\t\t\t\t\t\t   imageString.replace(\"data:image/png;base64,\",\"\")\r\n\t\t\t\t\t\t\t\t\t\t   setShowImage(imageString)}\r\n\t\t\t\t\t\t\t\t\t   if (imageString.includes(\"jpeg\")) {\r\n\t\t\t\t\t\t\t\t\t\t   imageString=imageString.replace(\"data:image/jpeg;base64,\",\"\");\r\n\t\t\t\t\t\t\t\t\t\t   setShowImage(imageString)}\r\n\t\t\t\t\t\t\t\t\t   }}/>\r\n\t\t\t\t\t\t\t\t\t   Small:\r\n                                          <img src={'data:; base64,' + showImage  } className=\"Avatar Avatar--md\"  />\r\n\t\t\t\t\t\t\t\t\t\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t  Large:\r\n\t\t\t\t\t\t\t\t\t\t  <img src={'data:; base64,' + showImage } className=\"Avatar Avatar--lg\"  />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"image\" className=\"PostCreate__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3 form-check\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Field type=\"checkbox\" id=\"agreeToTerms\" name=\"agreeToTerms\" className=\"form-check-input\" />\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"agreeToTerms\" className=\"form-check-label\">Agree to terms</label>\r\n\t\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"agreeToTerms\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t{ showSuccess\r\n\t\t\t\t\t\t\t\t\t? <div className=\"alert alert-success Register__success\"><b>Success!</b> Wait for transfer...</div>\r\n\t\t\t\t\t\t\t\t\t: <button type=\"submit\" className=\"mt-3 Register__submit-btn\" disabled={disabled}>Submit</button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostCreate\\PostCreate.js",["176","177"],"import React,{  useState,useEffect } from 'react';\r\nimport './PostCreate.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PostCreateSchema } from './post-create.schema';\r\nimport environment from '../environments/index';\r\nimport { UserService } from '../services/user.service';\r\nfunction PostCreate() {\r\n\t\r\n\tconst history = useHistory();\r\n\tlet [showImage,setShowImage]=useState(null)\r\n\tconst [showPreview,setShowPreview]=useState(false)\r\n\tasync function submit(values) {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append('image', values.image);\r\n\t\tdata.append('description', values.description);\r\n\t\tconst user = await UserService.me();\r\n\t\ttry {\r\n\t\t\tawait fetch(environment.apiUrl + '/post', {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: data,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: UserService.getToken()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\thistory.push('/profile/'+user.username);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\tfunction encodeImageFileAsURL(element) {\r\n\t\treturn new Promise((res, rej) => { \r\n\t\t\tvar file = element.target.files[0];\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tconsole.log(reader)\r\n\t\t\t\tres(reader.result)\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(file);\r\n\r\n\t\t})\r\n\t  }\r\n\r\n\t\r\n\treturn (\r\n\t\t<div className=\"d-flex row\">\r\n\t\t\t<div className=\"col-lg-6 order-sm-0 order-lg-1 my-3\">\r\n\t\t\t\t<h2 className=\"PostCreate__title\">Create Post</h2>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{ image: '', description: '' }}\r\n\t\t\t\t\tvalidationSchema={PostCreateSchema}\r\n\t\t\t\t\tonSubmit={submit}>\r\n\t\t\t\t\t{({ setFieldValue, isSubmitting }) => (\r\n\t\t\t\t\t\t<Form className=\"PostCreate__form mt-5 col-lg-8 px-0\" noValidate>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<input type=\"file\"\r\n\t\t\t\t\t\t\t\t       id=\"image\"\r\n\t\t\t\t\t\t\t\t       name=\"image\"\r\n\t\t\t\t\t\t\t\t       className=\"form-control\"\r\n\t\t\t\t\t\t\t\t       onChange={async (e) =>{ setFieldValue('image', e.target.files[0])\r\n\t\t\t\t\t\t\t\t\t   let imageString=await encodeImageFileAsURL(e)\r\n\t\t\t\t\t\t\t\t\t   imageString = imageString.replace(\"data:image/png;base64,\",\"\");\r\n\t\t\t\t\t\t\t\t\t   console.log(imageString)\r\n\t\t\t\t\t\t\t\t\t\tsetShowPreview(true)\r\n\t\t\t\t\t\t\t\t\t   setShowImage(imageString)\r\n\t\t\t\t\t\t\t\t\t   console.log(showImage)}}/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"image\" className=\"PostCreate__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"description\">Description</label>\r\n\t\t\t\t\t\t\t\t<Field as=\"textarea\" className=\"form-control\" name=\"description\" id=\"description\" />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"description\" className=\"PostCreate__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group text-right my-3\">\r\n\t\t\t\t\t\t\t\t<button type=\"submit\"\r\n\t\t\t\t\t\t\t\t        className=\"mt-3 PostCreate__submit-btn\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}>\r\n\t\t\t\t\t\t\t\t\t{ isSubmitting ? 'Posting...' : 'Post' }\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t{showPreview && <img src={'data:; base64,' + showImage} className=\"Post__image\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PostCreate;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Feed\\Feed.js",["178"],"import React, { useEffect, useState } from 'react';\r\nimport { PostService } from '../services/post.service';\r\nimport './Feed.scss';\r\nimport Post from '../common/Post/Post';\r\nimport { Link } from 'react-router-dom';\r\nfunction Feed() {\r\n\t// let usernameToCheck=document.cookie\r\n\t// \tusernameToCheck=usernameToCheck.replace(\"instagram-user=\",\"\")\r\n\t// \tusernameToCheck=jwt_decode(usernameToCheck)\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst [goExplore, setGoExplore] = useState(false);\r\n\tconst [checkPostsLength, setCheckPostsLength] = useState(false)\r\n\tuseEffect(() => {\r\n\t\tasync function getPosts() {\r\n\t\t\tsetPosts(await PostService.feed());\r\n\t\t\tsetCheckPostsLength(true)\r\n\t\t}\r\n\t\tgetPosts();\r\n\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkPostsLength === true) {\r\n\t\t\tif (posts.length === 0) {\r\n\t\t\t\tsetGoExplore(true)\r\n\t\t\t} else {\r\n\t\t\t\tsetGoExplore(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [checkPostsLength]);\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t{posts.map(post => (\r\n\t\t\t\t<Post key={post._id} data={post} />\r\n\t\t\t))}\r\n\t\t\t{goExplore && <Link to={'/explore'}>You're not following anyone yet! click here to explore</Link>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Search\\Search.js",["179"],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\Profile.js",["180","181","182","183","184","185","186"],"import React, { useEffect, useState,useContext } from 'react';\r\nimport './Profile.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport { UserService } from '../services/user.service';\r\nimport Post from '../common/Post/Post';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt  } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMemory  } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../user-context';\r\n function Profile() {\r\n\r\n\tconst { username } = useParams(); // followed user \r\n\tconst [posts, setPosts] = useState([]);\r\n\t// const [likes, setLikes] = useState([]);\r\n\tconst [showEdit,setShowEdit]=useState(false)\r\n\tconst [showFollow,setShowFollow]=useState(true)\r\n\tconst [showUnfollow,setShowUnfollow]=useState(false)\r\n\tconst [followingUserId,setFollowingUserId] = useState(\"\")\r\n\tconst [followedUserId,setFollowedUserId] = useState(\"\")\r\n\tconst [userData,setUserData]=useState(\"\")\r\n\tconst [showGoPost,setShowGoPost]=useState(false)\r\n\tconst [checkPostsLength,setCheckPostsLength]=useState(false)\r\n\tuseEffect(async() => {\r\n\t\tconst user = await UserService.me(); // following user\r\n\t\tif (username===user.username){\r\n\t\t\tsetShowEdit(true)\r\n\t\t} else {\r\n\t\t\tsetShowEdit(false)\r\n\t\t}\r\n\t\tasync function getPosts() {\r\n\t\t\ttry {\r\n\t\t\t\tconst posts = await UserService.getPosts(username);\r\n\t\t\t\tsetPosts(posts);\r\n\t\t\t\tsetCheckPostsLength(true)\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}\r\n\t\tasync function checkIfFollow(){\r\n\t\t\tconst status = await UserService.checkIfFollow(followingUserId,followedUserId)\r\n\t\t\tconsole.log(status)\r\n\t\t\tif (status===200){\r\n\t\t\t\tsetShowFollow(false)\r\n\t\t\t\tsetShowUnfollow(true)\r\n\t\t\t} else {\r\n\t\t\t\tsetShowFollow(true)\r\n\t\t\t\tsetShowUnfollow(false)\r\n\t\t\t}\r\n\t\t\tif (followingUserId===followedUserId){\r\n\t\t\t\tsetShowFollow(false)\r\n\t\t\t\tsetShowUnfollow(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\tasync function getUserData(){\r\n\t\t\tconst data = await UserService.getUserData(username)\r\n\t\t\tsetFollowedUserId(data._id)\r\n\t\t\tsetFollowingUserId(user._id)\r\n\t\t}\r\n\t\tgetPosts();\r\n\t\tgetUserData()\r\n\t\tcheckIfFollow()\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}, [username,followingUserId]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (checkPostsLength===true){\r\n\t\t\tif (posts.length===0){\r\n\t\t\t\tsetShowGoPost(true)\r\n\t\t\t} else {\r\n\t\t\t\tsetShowGoPost(false)\r\n\t\t\t}\r\n\t\t}\r\n\t},[checkPostsLength])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t},[]);\r\n\t\r\n\tasync function follow(){\r\n\t\tawait UserService.follow(followingUserId,followedUserId)\r\n\t\tsetShowFollow(false)\r\n\t\t\t\tsetShowUnfollow(true)\r\n\t}\r\n\r\n\tasync function unfollow(){\r\n\t\tawait UserService.unfollow(followingUserId,followedUserId)\r\n\t\tsetShowFollow(true)\r\n\t\t\t\tsetShowUnfollow(false)\r\n\t\t\t\r\n\t}\r\n\t\r\n\tasync function getPosts() {\r\n\t\ttry {\r\n\t\t\tconst posts = await UserService.getPosts(username);\r\n\t\t\tsetPosts(posts);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// async function getFollowers(){\r\n\t// \tconst followers = await UserService.getFollowers(username)\r\n\t// \tsetFollowers(followers.length)\r\n\t// }\r\n\t// function check(){\r\n\t// \tconsole.log(\"followingUserId:\",followingUserId,\"followedUserId:\",followedUserId)\r\n\t// }\r\n\treturn (\r\n\t<>\r\n\t\t<ProfileHeader username={username} postNum={posts.length}  />\r\n\t\t{showEdit && <div className=\"nav-item\">\r\n\t\t\t\t<Link className=\"nav-link\" to={\"/profile/\"+username+\"/edit\"}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\r\n\t\t\t\t</Link>\r\n\t\t\t</div>}\r\n\t\t\t{/* <button onClick={check}>check follow data</button> */}\r\n\t\t\t{showFollow && <div className=\"nav-item\">\r\n\t\t\t\t\t<button onClick={follow}>Follow   <FontAwesomeIcon icon={faMemory} /></button>\r\n\t\t\t</div>}\r\n\t\t\t{showUnfollow && <div className=\"nav-item\">\r\n\t\t\t\t\t<button onClick={unfollow}>Unfollow   <FontAwesomeIcon icon={faMemory} /></button>\r\n\t\t\t</div>}\r\n\t\t<hr />\r\n\t\t{showGoPost && <Link to={'/post/create'   }>You haven't posted anything yet! click here to post something...</Link>}\r\n\t\t<div className=\"row\">\r\n\t\t\t{posts.map(post => (\r\n\t\t\t\t<Post key={post._id} data={post} username={{username}} getPosts={getPosts} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t\t<ul className=\"nav\">\r\n\t\t\t\r\n\t\t\t<ul></ul></ul>\r\n\t\t\r\n\t</>\r\n\t);\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostPage\\PostPage.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Login\\login.schema.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Register\\register.schema.js",["187"],"import * as yup from 'yup';\r\nimport environment from '../environments/index';\r\nimport { UserService } from '../services/user.service';\r\nexport const registerSchema = yup.object().shape({\r\n\tusername: yup.string()\r\n\t\t.min(2, 'Username is too short')\r\n\t\t.max(16, 'Username is too long')\r\n\t\t.required('Username is required')\r\n\t\t.test('isUnique', 'Username is already taken', (value) => isUsernameUnique(value)),\r\n\temail: yup.string()\r\n\t\t.email('Email is invalid')\r\n\t\t.required('Email is required')\r\n\t\t.test('isUnique', 'Email is in use', (value) => isEmailUnique(value)),\r\n\tpassword: yup.string()\r\n\t\t.min(6, 'Password is too short')\r\n\t\t.max(16, 'Password is too long')\r\n\t\t.required('Password is required'),\r\n\tagreeToTerms: yup.mixed().oneOf([true], 'You must agree to terms')\r\n});\r\n\r\n// const memo = {\r\n// \temail: {},\r\n// \tusername: {}\r\n// };\r\n\r\n// function isUnique(field, value) {\r\n// \tconsole.log(memo[field][value])\r\n// \t// if (memo[field].hasOwnProperty(value)) {\r\n// \t// \treturn memo[field][value];\r\n// \t// }\r\n// \tfetch(environment.apiUrl+`/user/check?${field}=${value}`)\r\n// \t\t.then(res => res.json())\r\n// \t\t.then(res => {\r\n// \t\t\tmemo[field][value] = !res;\r\n// \t\t\treturn memo[field][value];\r\n// \t\t})\r\n// }\r\nasync function isUsernameUnique(value){\r\n\tconst result = await UserService.checkUsername(value)\r\n\treturn result\r\n}\r\n\r\nasync function isEmailUnique(value){\r\n\tconst result = await UserService.checkEmail(value)\r\n\treturn result\r\n}\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostCreate\\post-create.schema.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\services\\post.service.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Header\\HeaderAvatar\\HeaderAvatar.js",["188","189"],"\r\nimport React, { useEffect, useState,useContext } from 'react';\r\nimport './HeaderAvatar.scss';\r\nimport Avatar from '../../common/Avatar/Avatar';\r\nimport { UserContext } from '../../user-context';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserService } from '../../services/user.service';\r\nfunction HeaderAvatar() {\r\n\t// const { userObject } = useContext(UserContext);\r\n\t\r\n\tasync function getUser(){\r\n\t\tconst user = await UserService.me();\r\n\t\tconst userData = await UserService.getUserData(user.username)\r\n\t\tsetUserData(userData);\r\n  }\r\n  const [userData,setUserData]=useState({})\r\n  useEffect(() => {\r\n\t\tgetUser();\r\n\t\t\r\n  }, []);\r\n\treturn (\r\n\t\t<div className=\"HeaderAvatar\">\r\n\t\t\t<Link to={'/profile/' + userData.username}>\r\n\t\t\t\t<Avatar size=\"md\" image={userData.avatar} />\r\n\t\t\t\t<span className=\"mx-2 HeaderAvatar__username d-none d-lg-block\">{ userData.username }</span>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HeaderAvatar;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Header\\Menu\\Menu.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\environments\\index.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Search\\SearchResult\\SearchResult.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\ProfileHeader\\ProfileHeader.js",["190","191","192"],"import React, { useEffect, useState } from 'react';\r\nimport { UserService } from '../../services/user.service';\r\nimport Avatar from '../../common/Avatar/Avatar';\r\n\r\n function ProfileHeader({ username, postNum,followersNum }) {\r\n\r\n\tconst [user, setUser] = useState({});\r\n\tconst [userData,setUserData]= useState([])\r\n\tconst [followers,setFollowers] = useState(0)\r\n\tuseEffect(() => {\r\n\t\tasync function getUser() {\r\n\t\t\ttry {\r\n\t\t\t\tconst user = await UserService.get(username);\r\n\t\t\t\tsetUser(user);\r\n\t\t\t\tconst data = await UserService.getUserData(username)\r\n\t\t\tsetUserData(data)\r\n\t\t\t} catch (err){\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tgetUser();\r\n\t\tconsole.log(userData)\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tconsole.log(userData)\r\n\t  }, [userData])\r\n\treturn (\r\n\t\t<div className=\"mt-5\">\r\n\t\t\t<Avatar image={user.avatar} size=\"lg\" />\r\n\t\t\t<h2>{user.username}</h2>\r\n\t\t\t<p>{postNum} posts</p>\r\n\t\t<p> {userData?.followers?.length} followers</p>\r\n\t\t<p> {userData?.following?.length} following</p>\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProfileHeader;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Avatar\\Avatar.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Post\\Post.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Post\\PostDate\\PostDate.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\environments\\development.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Login\\LoginBasic.js",["193"],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Post\\PostLike\\PostLike.js",["194","195","196"],"import React, {  useState,useEffect } from 'react';\r\nimport { PostService } from '../../../services/post.service';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { useParams,useHistory } from 'react-router-dom';\r\nimport Post from '../Post';\r\nfunction PostLike({ data,getPosts   }) {\r\n\tconst history = useHistory();\r\n\tconst [likeButton,setLikeButton]=useState(\"like\")\r\n\tconst [gaveLikeTo,setGaveLikeTo]=useState(data.user._id)\r\n\tconst [likesLength,setLikesLength]=useState(\"\")\r\n\tconst [showDelete,setShowDelete]=useState(true)\r\n\tconst { username } = useParams();\r\n\tuseEffect(() => {\r\n\t\tasync function getLengthOfLikes(){\r\n\t\tlet likesByUsername = await UserService.getLikesLength(data._id)\r\n\t\tsetLikesLength(likesByUsername.length)\r\n\t\t}\r\n\t\tgetLengthOfLikes()\r\n\t\t},[likeButton])\r\n\tuseEffect(() => {\r\n\t\r\n\t\tasync function getInfoOfLikes() {\r\n\t\t\tconst LoggedInUser = await UserService.me()\r\n\t\t\t// מתוך יוזאפקט, הגייבלייקטו לא נשמר [username,gaveLikeTo,data._id]למה כשאני מוציא את \r\n\t\t\tif (username!==undefined) setGaveLikeTo(username)\r\n\t\t\tlet isLiked=await PostService.checkIfLiked(data._id,gaveLikeTo,LoggedInUser._id)\r\n\t\t\tconsole.log(LoggedInUser.username,data.user.username)\r\n\t\t\tif (isLiked===200){\r\n\t\t\t\tsetLikeButton(\"unlike\")\r\n\t\t\t} else {\r\n\t\t\t\tsetLikeButton(\"like\")\r\n\t\t\t}\r\n\t\t\tif (LoggedInUser.username!==data.user.username){\r\n\t\t\t\tsetShowDelete(false)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t\r\n\t\tgetInfoOfLikes();\r\n\t\t\r\n\t},[likeButton]);\r\n\r\nasync function toggleLike(){\r\n\t\tconst LoggedInUser = await UserService.me();\r\n\t\tif (likeButton===\"like\"){\r\n\t\t\tconsole.log(data)\r\n\t\t\tPostService.like(data._id,gaveLikeTo,LoggedInUser._id)\r\n\t\t\tsetLikeButton(\"unlike\")\r\n\t\t}\r\n\t\tif (likeButton===\"unlike\"){\r\n\t\t\tPostService.unlike(data._id,LoggedInUser._id)\r\n\t\t\tsetLikeButton(\"like\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tasync function deletePost(){\r\n\t\tvar cnf = window.confirm(\"Are you sure?\")\r\n\t\tif (cnf === true){\r\n\t\t\tPostService.deletePost(data._id)\r\n\t\t\tgetPosts()\r\n\t\t}\r\n\t}\r\n\tfunction editPost(){\r\n\t\thistory.push('/postedit/'+data._id)\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"col-12 col-md-4\">\r\n\t\t\t<button onClick={toggleLike}>{likeButton}</button>\r\n\t\t\t{showDelete && <div><button onClick={deletePost}>delete</button>\r\n\t\t\t<button onClick={editPost}>edit</button></div>}\r\n\t\t\t<div>Likes:{likesLength}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PostLike;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\ProfileEdit\\ProfileEdit.js",["197","198","199","200","201"],"import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { profileedit } from './profileedit.schema';\r\nimport React, { useEffect, useState,useContext } from 'react';\r\nimport { UserService } from '../../services/user.service';\r\nimport avatarDefault from '../../common/Avatar/avatar.jpg';\r\nimport './ProfileEdit.scss';\r\nimport { UserContext } from '../../user-context';\r\nimport Cookies from 'js-cookie';\r\nfunction ProfileEdit() {\r\n\tconst { setUser,  userObject } = useContext(UserContext);\r\n      const [showSuccess, setSuccess] = useState(false);\r\n\t  const [currentUser,setCurrentUser] = useState(\"\")\r\n      async function getUser(){\r\n            const user = await UserService.me();\r\n            const userData = await UserService.getUserData(user.username)\r\n            setUserData(userData);\r\n\t\t\tconsole.log(userData)\r\n\t\t\tsetCurrentUser(user.username)\r\n      }\r\n      const [userData,setUserData]=useState({})\r\n      useEffect(() => {\r\n            getUser();\r\n\t\t\tgetUser();\r\n      }, []);\r\n      \r\n      const [editIt,setEditIt] = useState(false)\r\n      const[username ,setUsername] = useState(\"\");\r\n      const[password ,setPassword] = useState(\"\");\r\n      const[bio ,setBio] = useState(\"\");\r\n      const [email,setEmail]=useState(\"\")\r\n      const [showImage,setShowImage]=useState(\"\")\r\n      let [values,setValues]=useState({})\r\n      useEffect(() => {\r\n            setUsername(userData.username)\r\n            setEmail(userData.email)\r\n            setBio(userData.bio)\r\n\t\t\tsetShowImage(userData.avatar)\r\n      },[userData])\r\n      useEffect(() => {\r\n\t\tlet avatar=\"\"\r\n\t\tif (avatarDefault.includes(\"jpeg\")) {\r\n\t\t\tavatar=avatarDefault.replace(\"data:image/jpeg;base64,\",\"\");\r\n\t\t\tsetShowImage(avatar)}\r\n\t},[userData])\r\n\t\t\r\n    \t function submit(){\r\n            if (password===\"\"){\r\n                  setValues({\r\n\t\t\t\t\t\tcurrentUser:currentUser,\r\n                        username : username,\r\n                        password : userData.password,\r\n                        bio:bio,\r\n                        email:email,\r\n\t\t\t\t\t\tavatar: showImage\r\n                  })\r\n\t\t\t\t  \r\n                  setEditIt(true)\r\n\t\t\t\t  setEditIt(false)\r\n            } if (password!==\"\") {\r\n                  setValues({\r\n\t\t\t\t\t\tcurrentUser:currentUser,\r\n                        username : username,\r\n                        password : password,\r\n                        bio:bio,\r\n                        email:email\r\n                  })\r\n\t\t\t\t  setEditIt(true)\r\n\t\t\t\t  setEditIt(false)\r\n            }  \r\n      }\r\n      \r\n\t  useEffect(() => {\r\n\t\tconsole.log(\"this is working first\",\"user is:\",userObject)\r\n\t\tUserService.edit(values)\r\n\t\tconsole.log(username)\r\n\t\tsetUser(username)\r\n\r\n\t\tlet toSend={}\r\n\t\tif (password===\"\"){\r\n\t\t\ttoSend={username:username,password:userData.password}\r\n\t\t}\r\n\t\t \r\n\t\tif (password!==\"\"){\r\n\t\t\t toSend={username:username,password:password}\r\n\t\t}\r\n\t\tasync function reCred(toSend) {\r\n\t\t\tconsole.log(\"toSend:\",toSend)\r\n\t\t\tconst res = await UserService.editLogin(toSend);\r\n\t\t\tconst json = await res.json();\r\n\t\t\tCookies.remove('instagram-user');\r\n\t\t\tCookies.set('instagram-user', json.token, { expires: 30 });\r\n\t\t}\r\n\t\treCred(toSend)\r\n\t\tconsole.log(\"setUser is now:\",userObject)\r\n\t  },[editIt])\r\n\r\n\t\r\n      function encodeImageFileAsURL(element) {\r\n\t\treturn new Promise((res, rej) => { \r\n\t\t\tvar file = element.target.files[0];\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tconsole.log(reader)\r\n\t\t\t\tres(reader.result)\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(file);\r\n\r\n\t\t})\r\n\t  }\r\n     \r\n\treturn (\r\n\t// \t<div>\r\n      //       Edit username:<input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} />\r\n      //      {changePassword &&<div> Edit password:<input type=\"text\" value={password}  onChange={event => setPassword(event.target.value)} /></div>}\r\n      //      <div> Edit email:<input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /></div>\r\n      //      <div> Edit bio: <input type=\"text\" maxLength=\"1000\" value={bio} onChange={event => setBio(event.target.value)} /></div>\r\n      //      <div> Edit avatar:</div>\r\n      //      <button onClick={submit}>submit</button>\r\n      //      <button onClick={togglePassword}>Change password?</button>\r\n      //   </div>\r\n        <div className=\"Register d-flex justify-content-center\">\r\n\t\t\t<div className=\"col col-lg-4 my-5\">\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<h2 className=\"Register__title\">Edit</h2>\r\n\t\t\t\t\t<h3 className=\"Register__subtitle\">It's quick and easy</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Formik\r\n                              enableReinitialize={true}\r\n\t\t\t\t\tinitialValues={{username: username, password: password, email: email, Bio:bio }}\r\n\t\t\t\t\tvalidationSchema={profileedit}\r\n\t\t\t\t\tvalidateOnChange={true}\r\n\t\t\t\t\tonSubmit={submit}>\r\n\t\t\t\t\t{({ setFieldValue,isSubmitting }) => (\r\n\t\t\t\t\t\t<Form className=\"Register__form mt-5 px-0\" noValidate>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t\t\t\t\t\t<Field type=\"username\" className=\"form-control\" id=\"username\" name=\"username\" onChange={event => {setUsername(event.target.value) }}  />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"username\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t\t<Field type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" onChange={event => setEmail(event.target.value)} />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"email\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t <div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t\t\t <Field  className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Same as current\" onChange={event => setPassword(event.target.value)} />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"password\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n                                          <div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"Bio\">Bio</label>\r\n\t\t\t\t\t\t\t\t<Field type=\"Bio\" className=\"form-control\" name=\"Bio\" id=\"Bio\"  onChange={event => setBio(event.target.value)}  />\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"Bio\" className=\"Register__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n                                          <div className=\"form-group my-3\">Avatar\r\n\t\t\t\t\t\t\t\t<input type=\"file\"\r\n\t\t\t\t\t\t\t\t       id=\"image\"\r\n\t\t\t\t\t\t\t\t       name=\"image\"\r\n\t\t\t\t\t\t\t\t       className=\"form-control\"\r\n\t\t\t\t\t\t\t\t       onChange={async (e) =>{ setFieldValue('image', e.target.files[0])\r\n\t\t\t\t\t\t\t\t\t   let imageString=await encodeImageFileAsURL(e)\r\n\t\t\t\t\t\t\t\t\t   if (imageString.includes(\"png\")) imageString = imageString.replace(\"data:image/png;base64,\",\"\");\r\n\t\t\t\t\t\t\t\t\t   if (imageString.includes(\"jpeg\")) imageString=imageString.replace(\"data:image/jpeg;base64,\",\"\");\r\n\t\t\t\t\t\t\t\t\t   setShowImage(imageString)\r\n\t\t\t\t\t\t\t\t\t   }}/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"image\" className=\"PostCreate__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\tSmall:\r\n                                          <img src={'data:; base64,' + showImage} className=\"Avatar Avatar--md\"  />\r\n\t\t\t\t\t\t\t\t\t\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t  Large:\r\n\t\t\t\t\t\t\t\t\t\t  <img src={'data:; base64,' + showImage} className=\"Avatar Avatar--lg\"  />\r\n\t\t\t\t\t\t\t{/* <button className=\"mt-3 Register__submit-btn\" onClick={togglePassword}>Change password?</button> */}\r\n\t\t\t\t\t\t\t{/* <div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t{ showSuccess\r\n\t\t\t\t\t\t\t\t\t? <div className=\"alert alert-success Register__success\"><b>Success!</b> Wait for transfer...</div>\r\n\t\t\t\t\t\t\t\t\t: <button type=\"submit\" className=\"mt-3 Register__submit-btn\" disabled={isSubmitting}>Submit</button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div> */}\r\n                                          <div className=\"form-group my-3\">\r\n                                          <button  type=\"submit\" className=\"mt-3 Register__submit-btn\" >Submit</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProfileEdit;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\Comments.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\CommentAdd\\CommentAdd.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\Comment\\Comment.js",["202","203"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '../../Avatar/Avatar';\r\nimport CommentDate from '../../Comments/CommentDate/CommentDate';\r\nimport { Link } from 'react-router-dom';\r\nimport { PostService } from '../../../services/post.service';\r\nimport { UserService } from '../../../services/user.service';\r\nfunction Comment({ comment }) {\r\n\tconst [showDeleteAndEdit, setShowDeleteAndEdit] = useState(false)\r\n\tconst [commenterName,setCommenterName] = useState(\"\")\r\n\tuseEffect(async () => {\r\n\t\tconst user = await UserService.me();\r\n\t\tconst data = await PostService.getCommentData(comment._id)\r\n\t\tconst userDataById = await UserService.getUserDataById(data.user)\r\n\t\tsetCommenterName(userDataById.username)\r\n\t\tif (user._id === data.user) {\r\n\t\t\tsetShowDeleteAndEdit(true)\r\n\t\t} else {\r\n\t\t\tsetShowDeleteAndEdit(false)\r\n\t\t}\r\n\t}, []);\r\n\t// show delete button if i'm the creator\r\n\tasync function erase() {\r\n\t\tawait PostService.deleteComment(comment._id)\r\n\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Link to={'/profile/' +  commenterName}>\r\n\t\t\t<Avatar image={comment.user.avatar} />\r\n\t\t\t<div>{commenterName}</div>\r\n\t\t\t</Link>\r\n\t\t\t<p className=\"mb-0\">{comment.content}</p>\r\n\t\t\t<CommentDate date={comment.createdAt} />\r\n\t\t\t<button>Like</button>\r\n\t\t\t{showDeleteAndEdit && <div>\r\n\t\t\t\t<button onClick={erase}>Delete</button>\r\n\t\t\t\t<button>Edit</button></div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Comment;","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Profile\\ProfileEdit\\profileedit.schema.js",["204"],"import * as yup from 'yup';\r\nimport { UserService } from '../../services/user.service';\r\nimport environment from '../../environments/index';\r\nexport const profileedit = yup.object().shape({\r\n\tusername: yup.string()\r\n\t\t.min(2, 'Username is too short')\r\n\t\t.max(16, 'Username is too long')\r\n\t\t.required('Username is required')\r\n\t\t.test('isUnique', 'Username is already taken', (value) => isUsernameUnique(value)),\r\n\temail: yup.string()\r\n\t\t.email('Email is invalid')\r\n\t\t.required('Email is required')\r\n\t\t.test('isUnique', 'Email is in use', (value) => isEmailUnique(value)),\r\n\tpassword: yup.string()\r\n\t\t.min(6, 'Password is too short')\r\n\t\t.max(16, 'Password is too long'),\r\n\t\t// .required('Password is required')\r\n        bio: yup.string()\r\n        .max(150,'bio is too long, max 150')\r\n});\r\n\r\n// const memo = {\r\n// \temail: {},\r\n// \tusername: {}\r\n// };\r\n\r\n// async function isUnique(field,value) {\r\n//     let LoggedInUserName=await UserService.me();\r\n//     console.log(LoggedInUserName)\r\n//     if (LoggedInUserName.username===value) \r\n//     {\r\n//         return true\r\n//     }\r\n//     let LoggedInEmail = await UserService.getUserData(LoggedInUserName.username)\r\n//     if (LoggedInEmail.email===value){\r\n//         return true\r\n//     }\r\n//         if (memo[field].hasOwnProperty(value)) {\r\n//             return memo[field][value];\r\n//         }\r\n//         fetch(environment.apiUrl+`/user/check?${field}=${value}`)\r\n//             .then(res => res.json())\r\n//             .then(res => {\r\n//                 memo[field][value] = !res;\r\n//                 return memo[field][value];\r\n//             })\r\n//         }\r\n\r\n        async function isUsernameUnique(value){\r\n\t\t\tconst user = await UserService.me();\r\n            const userData = await UserService.getUserData(user.username)\r\n            const result = await UserService.checkUsername(value,userData.username)\r\n            return result\r\n        }\r\n        \r\n        async function isEmailUnique(value){\r\n\t\t\tconst user = await UserService.me();\r\n            const userData = await UserService.getUserData(user.username)\r\n            const result = await UserService.checkEmail(value,userData.email)\r\n            return result\r\n        }","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\common\\Comments\\CommentDate\\CommentDate.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Logout\\Logout.js",["205","206","207"],"import React,{  useState,useEffect,useContext} from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport {  useHistory } from 'react-router-dom';\r\nfunction Logout(props) {\r\n    const history = useHistory();\r\n\tasync function out(){\r\n\t\tCookies.remove('instagram-user');\r\n        history.push('/login');\r\n        props.setUser(\"\")\r\n        props.check()\r\n    }\r\n\r\n\treturn (\r\n    <div>\r\n    <button onClick={out}>Click here to log out</button>\r\n    </div>);\r\n}\r\n\r\nexport default Logout;\r\n","C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\environments\\production.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\Explore\\Explore.js",[],"C:\\Users\\Elashvili's\\Desktop\\instagram current 2\\instagram-ui\\src\\PostEdit\\PostEdit.js",["208","209","210","211","212"],"import React,{  useState,useEffect } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport environment from '../environments/index';\r\nimport { UserService } from '../services/user.service';\r\nfunction PostEdit() {\r\n\tlet {postId}=useParams()\r\n\tconst history = useHistory();\r\n\tlet [showImage,setShowImage]=useState(null)\r\n\tconst [showPreview,setShowPreview]=useState(false)\r\n    const [description,setDescription]=useState(\"\")\r\n\tasync function submit() {\r\n        const user = await UserService.me();\r\n\t\ttry {\r\n\t\t\t await fetch(environment.apiUrl + '/postedit', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({postId: postId,description:description}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: UserService.getToken(),\r\n                    'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\thistory.push('/profile/'+user.username);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n\treturn (\r\n        <div className=\"d-flex row\">\r\n\t\t\t<div className=\"col-lg-6 order-sm-0 order-lg-1 my-3\">\r\n\t\t\t\t<h2 className=\"PostCreate__title\">Edit Post</h2>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{  description: '' }}\r\n\t\t\t\t\tonSubmit={submit}>\r\n\t\t\t\t\t{({ setFieldValue, isSubmitting }) => (\r\n\t\t\t\t\t\t<Form className=\"PostCreate__form mt-5 col-lg-8 px-0\" noValidate>\r\n\t\t\t\t\t\t\t<div className=\"form-group my-3\">\r\n\t\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"description\">Description</label>\r\n\t\t\t\t\t\t\t\t<textarea type=\"text\"  maxlength=\"50\"  className=\"form-control\" name=\"description\" id=\"description\" onChange={event => {setDescription(event.target.value)}}/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage component=\"small\" name=\"description\" className=\"PostCreate__form__error\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group text-right my-3\">\r\n\t\t\t\t\t\t\t\t<button type=\"submit\"\r\n\t\t\t\t\t\t\t\t        className=\"mt-3 PostCreate__submit-btn\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}>\r\n\t\t\t\t\t\t\t\t\t{ isSubmitting ? 'Posting...' : 'Post' }\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t{showPreview && <img src={'data:; base64,' + showImage} className=\"Post__image\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default PostEdit;\r\n",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":41,"column":8,"nodeType":"219","endLine":41,"endColumn":22,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":51,"column":14,"nodeType":"223","messageId":"224","endLine":51,"endColumn":18},{"ruleId":"221","severity":1,"message":"225","line":13,"column":9,"nodeType":"223","messageId":"224","endLine":13,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":102,"column":43,"nodeType":"228","endLine":102,"endColumn":118},{"ruleId":"226","severity":1,"message":"227","line":105,"column":13,"nodeType":"228","endLine":105,"endColumn":87},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"227","line":82,"column":21,"nodeType":"228","endLine":82,"endColumn":87},{"ruleId":"217","severity":1,"message":"230","line":30,"column":5,"nodeType":"219","endLine":30,"endColumn":23,"suggestions":"231"},{"ruleId":"217","severity":1,"message":"232","line":31,"column":4,"nodeType":"219","endLine":31,"endColumn":11,"suggestions":"233"},{"ruleId":"221","severity":1,"message":"234","line":1,"column":37,"nodeType":"223","messageId":"224","endLine":1,"endColumn":47},{"ruleId":"221","severity":1,"message":"235","line":11,"column":10,"nodeType":"223","messageId":"224","endLine":11,"endColumn":21},{"ruleId":"221","severity":1,"message":"236","line":22,"column":9,"nodeType":"223","messageId":"224","endLine":22,"endColumn":17},{"ruleId":"221","severity":1,"message":"237","line":22,"column":18,"nodeType":"223","messageId":"224","endLine":22,"endColumn":29},{"ruleId":"217","severity":1,"message":"238","line":25,"column":12,"nodeType":"239","endLine":67,"endColumn":3},{"ruleId":"217","severity":1,"message":"240","line":67,"column":5,"nodeType":"219","endLine":67,"endColumn":31,"suggestions":"241"},{"ruleId":"217","severity":1,"message":"230","line":77,"column":4,"nodeType":"219","endLine":77,"endColumn":22,"suggestions":"242"},{"ruleId":"221","severity":1,"message":"243","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":19},{"ruleId":"221","severity":1,"message":"234","line":2,"column":37,"nodeType":"223","messageId":"224","endLine":2,"endColumn":47},{"ruleId":"221","severity":1,"message":"235","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":21},{"ruleId":"221","severity":1,"message":"244","line":9,"column":9,"nodeType":"223","messageId":"224","endLine":9,"endColumn":18},{"ruleId":"221","severity":1,"message":"245","line":9,"column":19,"nodeType":"223","messageId":"224","endLine":9,"endColumn":31},{"ruleId":"217","severity":1,"message":"246","line":24,"column":5,"nodeType":"219","endLine":24,"endColumn":7,"suggestions":"247"},{"ruleId":"221","severity":1,"message":"248","line":9,"column":14,"nodeType":"223","messageId":"224","endLine":9,"endColumn":29},{"ruleId":"221","severity":1,"message":"249","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":12},{"ruleId":"217","severity":1,"message":"250","line":19,"column":5,"nodeType":"219","endLine":19,"endColumn":17,"suggestions":"251"},{"ruleId":"217","severity":1,"message":"252","line":41,"column":4,"nodeType":"219","endLine":41,"endColumn":16,"suggestions":"253"},{"ruleId":"221","severity":1,"message":"254","line":11,"column":14,"nodeType":"223","messageId":"224","endLine":11,"endColumn":25},{"ruleId":"221","severity":1,"message":"255","line":11,"column":27,"nodeType":"223","messageId":"224","endLine":11,"endColumn":37},{"ruleId":"217","severity":1,"message":"256","line":95,"column":6,"nodeType":"219","endLine":95,"endColumn":14,"suggestions":"257"},{"ruleId":"226","severity":1,"message":"227","line":169,"column":43,"nodeType":"228","endLine":169,"endColumn":116},{"ruleId":"226","severity":1,"message":"227","line":172,"column":13,"nodeType":"228","endLine":172,"endColumn":86},{"ruleId":"217","severity":1,"message":"238","line":10,"column":12,"nodeType":"239","endLine":20,"endColumn":3},{"ruleId":"217","severity":1,"message":"258","line":20,"column":5,"nodeType":"219","endLine":20,"endColumn":7,"suggestions":"259"},{"ruleId":"221","severity":1,"message":"243","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":19},{"ruleId":"221","severity":1,"message":"260","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"234","line":1,"column":36,"nodeType":"223","messageId":"224","endLine":1,"endColumn":46},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"261","line":2,"column":18,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"262","line":9,"column":17,"nodeType":"223","messageId":"224","endLine":9,"endColumn":29},{"ruleId":"221","severity":1,"message":"263","line":10,"column":21,"nodeType":"223","messageId":"224","endLine":10,"endColumn":35},{"ruleId":"226","severity":1,"message":"227","line":53,"column":21,"nodeType":"228","endLine":53,"endColumn":87},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLoggedIn' and 'userObject'. Either include them or remove the dependency array.","ArrayExpression",["266"],"no-unused-vars","'test' is defined but never used.","Identifier","unusedVar","'disabled' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'posts.length'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'hasNoResults'. Either include it or remove the dependency array.",["268"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'followedUserId'. Either include it or remove the dependency array.",["269"],["270"],"'environment' is defined but never used.","'followers' is assigned a value but never used.","'setFollowers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userData' and 'username'. Either include them or remove the dependency array.",["271"],"'usernameHandler' is defined but never used.","'Post' is defined but never used.","React Hook useEffect has a missing dependency: 'data._id'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has missing dependencies: 'data._id', 'data.user.username', 'gaveLikeTo', and 'username'. Either include them or remove the dependency array.",["273"],"'showSuccess' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'password', 'setUser', 'userData.password', 'userObject', 'username', and 'values'. Either include them or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'comment._id'. Either include it or remove the dependency array.",["275"],"'useState' is defined but never used.","'Field' is defined but never used.","'setShowImage' is assigned a value but never used.","'setShowPreview' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"278","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [history, isLoggedIn, user, userObject]",{"range":"295","text":"296"},"Update the dependencies array to be: [checkPostsLength, posts.length]",{"range":"297","text":"298"},"Update the dependencies array to be: [hasNoResults, users]",{"range":"299","text":"300"},"Update the dependencies array to be: [username, followingUserId, followedUserId]",{"range":"301","text":"302"},{"range":"303","text":"298"},"Update the dependencies array to be: [userData, username]",{"range":"304","text":"305"},"Update the dependencies array to be: [data._id, likeButton]",{"range":"306","text":"307"},"Update the dependencies array to be: [data._id, data.user.username, gaveLikeTo, likeButton, username]",{"range":"308","text":"309"},"Update the dependencies array to be: [editIt, password, setUser, userData.password, userObject, username, values]",{"range":"310","text":"311"},"Update the dependencies array to be: [comment._id]",{"range":"312","text":"313"},[1474,1488],"[history, isLoggedIn, user, userObject]",[873,891],"[checkPostsLength, posts.length]",[651,658],"[hasNoResults, users]",[2185,2211],"[username, followingUserId, followedUserId]",[2376,2394],[673,675],"[userData, username]",[786,798],"[data._id, likeButton]",[1420,1432],"[data._id, data.user.username, gaveLikeTo, likeButton, username]",[3185,3193],"[editIt, password, setUser, userData.password, userObject, username, values]",[845,847],"[comment._id]"]